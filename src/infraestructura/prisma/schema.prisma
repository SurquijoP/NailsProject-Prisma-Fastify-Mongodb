// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre     String
  apellido   String
  edad       Int?
  celular    String  @unique
  barrio     String?
  sexo       String?
  correo     String  @unique
  appointment Appointment?
  created_at String

  @@map("user")
}

model NailType {
  id String  @id @default(auto())  @map("_id") @db.ObjectId
  name String @unique
  allowed_detalis NailsDetails[]
  default_price Int
  appointment Appointment?
  deleted_at DateTime @updatedAt
  created_at DateTime @default(now())

  @@map("nailstypes")
}

model NailsDetails {
  id String  @id @default(auto())  @map("_id") @db.ObjectId
  name String
  price Int
  details NailType @relation(fields: [detailsId], references: [id])
  detailsId String @db.ObjectId
  appointments Appointment @relation(fields: [appointmentId],references: [id])
  appointmentId String @db.ObjectId
  deleted_at DateTime @updatedAt
  created_at DateTime @default(now())

  @@map("nailsdetails")
}

model scheduler {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  appointments String[]
  appointment Appointment @relation(fields: [appointmentId],references: [id])
  appointmentId String @unique @db.ObjectId
  created_at String
}

model Appointment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  //...........user_id...........
  user User @relation(fields: [userId],references: [id])
  userId String @unique @db.ObjectId
  //..........types_of_details............
  types_of_nails NailType @relation(fields: [types_of_nailsId],references: [id])
  types_of_nailsId String @unique @db.ObjectId
  //..........details_of_nails...........
  details_of_nails NailsDetails[]
  //........scheduler.........
  scheduler scheduler?
  status Status @default(FREE)
  status_date String
  status_logs String[]
  duration String
  reserved_at String
  deleted_at String
  created_at String
  @@map("appointments")
}

enum Status {
  FREE
  RESERVED
  CONFIRMED
  CANCELED
  DELETED
}
